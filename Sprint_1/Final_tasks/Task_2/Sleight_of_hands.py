"""
############
ID: 54265967
############

Анализ:

По условию:
    - 2 игрока, у каждого 1 рука может играть, за один раунд игрок может нажать k клавиш,
      значит оба они могу нажать 2k клавиш.
    - Поле представляет собой квадрат размером 4х4.
    - Цифр всего 9 ([1..9]), значит и раудов тоже 9.

На каждом раунде игрокам предстоит нажать цифру текущего раунда, например, если рауд 3 - жмем цифру 3.
Если получится за один раунд нажать все необходимые цифры, то игроки получат балл, в противном случае - нет.

Условие получения балла: 2k >= количество нужных цифр на поле и такие цифры должны существовать.

Пример:

3 - количество цифр, которое может нажать игрок за раунд;
Матрица:
1231
2..2
2..2
2..2

Раунды:
1) 1 - "1" = 2 < 2k | 4) 0 - "4" нет на поле | 7) 0 - "7" нет на поле
2) 0 - "2" = 7 > 2k | 5) 0 - "5" нет на поле | 8) 0 - "8" нет на поле
3) 1 - "3" = 1 < 2k | 6) 0 - "6" нет на поле | 9) 0 - "9" нет на поле

Результат: 2 балла
"""

import sys

SIDE_SIZE = 4  # Размер стороны квадратного поля.
PLAYERS_HANDS = 2  # Количество рук задействованных в игре (два игрока = два руки).


def count_score(fingers, field, hands=PLAYERS_HANDS):
    # Словарь для подсчета сколько раз встречается каждый символ.
    variants = dict()

    for i in range(SIDE_SIZE):
        for j in range(SIDE_SIZE):
            # Точки игнорируем.
            if field[i][j] == '.':
                continue
            # Заполням словарь.
            variants[field[i][j]] = variants[field[i][j]] + 1 if variants.get(field[i][j]) is not None else 1

    score = 0
    # Подсчитываем количество очков.
    for value in variants.values():
        # По условию они нажимают вдвоем -> fingers * 2.
        if value <= fingers * hands and value != 0:
            score += 1

    return score


if __name__ == '__main__':
    fingers = int(input())

    field = [[]] * SIDE_SIZE  # Пустая матрица.

    # Заполняем матрицу.
    for i in range(SIDE_SIZE):
        field[i] = list(sys.stdin.readline().strip())

    print(count_score(fingers, field))
